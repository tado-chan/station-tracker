{"ast":null,"code":"import _asyncToGenerator from \"/mnt/c/Users/aluta/station-tracker/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, Build, h, Host } from '@stencil/core/internal/client';\nimport { a as attachComponent } from './framework-delegate.js';\nimport { a as printIonError } from './index4.js';\nconst tabCss = \":host(.tab-hidden){display:none !important}\";\nconst Tab = /*@__PURE__*/proxyCustomElement(class Tab extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.loaded = false;\n    /** @internal */\n    this.active = false;\n  }\n  componentWillLoad() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (Build.isDev) {\n        if (_this.component !== undefined && _this.el.childElementCount > 0) {\n          printIonError('[ion-tab] - You can not use a lazy-loaded component in a tab and inlined content at the same time.' + `- Remove the component attribute in: <ion-tab component=\"${_this.component}\">` + ` or` + `- Remove the embedded content inside the ion-tab: <ion-tab></ion-tab>`);\n        }\n      }\n      if (_this.active) {\n        yield _this.setActive();\n      }\n    })();\n  }\n  /** Set the active component for the tab */\n  setActive() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.prepareLazyLoaded();\n      _this2.active = true;\n    })();\n  }\n  changeActive(isActive) {\n    if (isActive) {\n      this.prepareLazyLoaded();\n    }\n  }\n  prepareLazyLoaded() {\n    if (!this.loaded && this.component != null) {\n      this.loaded = true;\n      try {\n        return attachComponent(this.delegate, this.el, this.component, ['ion-page']);\n      } catch (e) {\n        printIonError('[ion-tab] - Exception in prepareLazyLoaded:', e);\n      }\n    }\n    return Promise.resolve(undefined);\n  }\n  render() {\n    const {\n      tab,\n      active,\n      component\n    } = this;\n    return h(Host, {\n      key: 'dbad8fe9f1566277d14647626308eaf1601ab01f',\n      role: \"tabpanel\",\n      \"aria-hidden\": !active ? 'true' : null,\n      \"aria-labelledby\": `tab-button-${tab}`,\n      class: {\n        'ion-page': component === undefined,\n        'tab-hidden': !active\n      }\n    }, h(\"slot\", {\n      key: '3be64f4e7161f6769aaf8e4dcb5293fcaa09af45'\n    }));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"active\": [\"changeActive\"]\n    };\n  }\n  static get style() {\n    return tabCss;\n  }\n}, [257, \"ion-tab\", {\n  \"active\": [1028],\n  \"delegate\": [16],\n  \"tab\": [1],\n  \"component\": [1],\n  \"setActive\": [64]\n}, undefined, {\n  \"active\": [\"changeActive\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-tab\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-tab\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Tab);\n        }\n        break;\n    }\n  });\n}\nconst IonTab = Tab;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonTab, defineCustomElement };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}