{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nconst itemGroupIosCss = \"ion-item-group{display:block}\";\nconst itemGroupMdCss = \"ion-item-group{display:block}\";\nconst ItemGroup = /*@__PURE__*/proxyCustomElement(class ItemGroup extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n  }\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      key: 'e49dc8f99247d2431d7c6db01b6e021a0f5b1c37',\n      role: \"group\",\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`item-group-${mode}`]: true,\n        item: true\n      }\n    });\n  }\n  static get style() {\n    return {\n      ios: itemGroupIosCss,\n      md: itemGroupMdCss\n    };\n  }\n}, [288, \"ion-item-group\"]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-item-group\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-item-group\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ItemGroup);\n        }\n        break;\n    }\n  });\n}\nconst IonItemGroup = ItemGroup;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonItemGroup, defineCustomElement };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}