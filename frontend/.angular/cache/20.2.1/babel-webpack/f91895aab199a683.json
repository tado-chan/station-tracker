{"ast":null,"code":"import _asyncToGenerator from \"/mnt/c/Users/aluta/station-tracker/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nexport class BackgroundGeofenceWeb extends WebPlugin {\n  startGeofencing(options) {\n    return _asyncToGenerator(function* () {\n      console.log('BackgroundGeofence: Web implementation - startGeofencing not fully supported');\n      return {\n        success: false\n      };\n    })();\n  }\n  stopGeofencing() {\n    return _asyncToGenerator(function* () {\n      console.log('BackgroundGeofence: Web implementation - stopGeofencing');\n      return {\n        success: true\n      };\n    })();\n  }\n  addGeofences(options) {\n    return _asyncToGenerator(function* () {\n      console.log('BackgroundGeofence: Web implementation - addGeofences', options.geofences.length);\n      return {\n        success: false\n      };\n    })();\n  }\n  removeGeofences(options) {\n    return _asyncToGenerator(function* () {\n      console.log('BackgroundGeofence: Web implementation - removeGeofences', options.identifiers);\n      return {\n        success: false\n      };\n    })();\n  }\n  getCurrentLocation() {\n    return _asyncToGenerator(function* () {\n      if ('geolocation' in navigator) {\n        return new Promise((resolve, reject) => {\n          navigator.geolocation.getCurrentPosition(position => {\n            resolve({\n              latitude: position.coords.latitude,\n              longitude: position.coords.longitude,\n              accuracy: position.coords.accuracy,\n              timestamp: position.timestamp\n            });\n          }, error => reject(error), {\n            enableHighAccuracy: true,\n            timeout: 10000,\n            maximumAge: 60000\n          });\n        });\n      }\n      throw new Error('Geolocation not supported');\n    })();\n  }\n  checkPermissions() {\n    return _asyncToGenerator(function* () {\n      return {\n        location: 'prompt',\n        backgroundLocation: 'not-available'\n      };\n    })();\n  }\n  requestPermissions() {\n    return _asyncToGenerator(function* () {\n      return {\n        location: 'prompt',\n        backgroundLocation: 'not-available'\n      };\n    })();\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}