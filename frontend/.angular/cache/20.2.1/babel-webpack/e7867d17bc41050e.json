{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, forceUpdate, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nimport { s as safeCall } from './overlays.js';\nimport { g as getClassMap } from './theme.js';\nimport { d as defineCustomElement$d } from './button.js';\nimport { d as defineCustomElement$c } from './buttons.js';\nimport { d as defineCustomElement$b } from './checkbox.js';\nimport { d as defineCustomElement$a } from './content.js';\nimport { d as defineCustomElement$9 } from './header.js';\nimport { d as defineCustomElement$8 } from './icon.js';\nimport { d as defineCustomElement$7 } from './item.js';\nimport { d as defineCustomElement$6 } from './list.js';\nimport { d as defineCustomElement$5 } from './radio.js';\nimport { d as defineCustomElement$4 } from './radio-group.js';\nimport { d as defineCustomElement$3 } from './ripple-effect.js';\nimport { d as defineCustomElement$2 } from './title.js';\nimport { d as defineCustomElement$1 } from './toolbar.js';\nconst ionicSelectModalMdCss = \".sc-ion-select-modal-ionic-h{height:100%}ion-list.sc-ion-select-modal-ionic ion-radio.sc-ion-select-modal-ionic::part(container),ion-list.sc-ion-select-modal-ionic ion-radio.sc-ion-select-modal-ionic [part~=\\\"container\\\"]{display:none}ion-list.sc-ion-select-modal-ionic ion-radio.sc-ion-select-modal-ionic::part(label),ion-list.sc-ion-select-modal-ionic ion-radio.sc-ion-select-modal-ionic [part~=\\\"label\\\"]{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}ion-item.sc-ion-select-modal-ionic{--inner-border-width:0}.item-radio-checked.sc-ion-select-modal-ionic{--background:rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.08);--background-focused:var(--ion-color-primary, #0054e9);--background-focused-opacity:0.2;--background-hover:var(--ion-color-primary, #0054e9);--background-hover-opacity:0.12}.item-checkbox-checked.sc-ion-select-modal-ionic{--background-activated:var(--ion-item-color, var(--ion-text-color, #000));--background-focused:var(--ion-item-color, var(--ion-text-color, #000));--background-hover:var(--ion-item-color, var(--ion-text-color, #000));--color:var(--ion-color-primary, #0054e9)}\";\nconst selectModalIosCss = \".sc-ion-select-modal-ios-h{height:100%}ion-item.sc-ion-select-modal-ios{--inner-padding-end:0}ion-radio.sc-ion-select-modal-ios::after{bottom:0;position:absolute;width:calc(100% - 0.9375rem - 16px);border-width:0px 0px 0.55px 0px;border-style:solid;border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));content:\\\"\\\"}ion-radio.sc-ion-select-modal-ios::after{inset-inline-start:calc(0.9375rem + 16px)}\";\nconst selectModalMdCss = \".sc-ion-select-modal-md-h{height:100%}ion-list.sc-ion-select-modal-md ion-radio.sc-ion-select-modal-md::part(container),ion-list.sc-ion-select-modal-md ion-radio.sc-ion-select-modal-md [part~=\\\"container\\\"]{display:none}ion-list.sc-ion-select-modal-md ion-radio.sc-ion-select-modal-md::part(label),ion-list.sc-ion-select-modal-md ion-radio.sc-ion-select-modal-md [part~=\\\"label\\\"]{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}ion-item.sc-ion-select-modal-md{--inner-border-width:0}.item-radio-checked.sc-ion-select-modal-md{--background:rgba(var(--ion-color-primary-rgb, 0, 84, 233), 0.08);--background-focused:var(--ion-color-primary, #0054e9);--background-focused-opacity:0.2;--background-hover:var(--ion-color-primary, #0054e9);--background-hover-opacity:0.12}.item-checkbox-checked.sc-ion-select-modal-md{--background-activated:var(--ion-item-color, var(--ion-text-color, #000));--background-focused:var(--ion-item-color, var(--ion-text-color, #000));--background-hover:var(--ion-item-color, var(--ion-text-color, #000));--color:var(--ion-color-primary, #0054e9)}\";\nconst SelectModal = /*@__PURE__*/proxyCustomElement(class SelectModal extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.options = [];\n  }\n  closeModal() {\n    const modal = this.el.closest('ion-modal');\n    if (modal) {\n      modal.dismiss();\n    }\n  }\n  findOptionFromEvent(ev) {\n    const {\n      options\n    } = this;\n    return options.find(o => o.value === ev.target.value);\n  }\n  getValues(ev) {\n    const {\n      multiple,\n      options\n    } = this;\n    if (multiple) {\n      // this is a modal with checkboxes (multiple value select)\n      // return an array of all the checked values\n      return options.filter(o => o.checked).map(o => o.value);\n    }\n    // this is a modal with radio buttons (single value select)\n    // return the value that was clicked, otherwise undefined\n    const option = ev ? this.findOptionFromEvent(ev) : null;\n    return option ? option.value : undefined;\n  }\n  callOptionHandler(ev) {\n    const option = this.findOptionFromEvent(ev);\n    const values = this.getValues(ev);\n    if (option === null || option === void 0 ? void 0 : option.handler) {\n      safeCall(option.handler, values);\n    }\n  }\n  setChecked(ev) {\n    const {\n      multiple\n    } = this;\n    const option = this.findOptionFromEvent(ev);\n    // this is a modal with checkboxes (multiple value select)\n    // we need to set the checked value for this option\n    if (multiple && option) {\n      option.checked = ev.detail.checked;\n    }\n  }\n  renderRadioOptions() {\n    const checked = this.options.filter(o => o.checked).map(o => o.value)[0];\n    return h(\"ion-radio-group\", {\n      value: checked,\n      onIonChange: ev => this.callOptionHandler(ev)\n    }, this.options.map(option => h(\"ion-item\", {\n      lines: \"none\",\n      class: Object.assign({\n        // TODO FW-4784\n        'item-radio-checked': option.value === checked\n      }, getClassMap(option.cssClass))\n    }, h(\"ion-radio\", {\n      value: option.value,\n      disabled: option.disabled,\n      justify: \"start\",\n      labelPlacement: \"end\",\n      onClick: () => this.closeModal(),\n      onKeyUp: ev => {\n        if (ev.key === ' ') {\n          /**\n           * Selecting a radio option with keyboard navigation,\n           * either through the Enter or Space keys, should\n           * dismiss the modal.\n           */\n          this.closeModal();\n        }\n      }\n    }, option.text))));\n  }\n  renderCheckboxOptions() {\n    return this.options.map(option => h(\"ion-item\", {\n      class: Object.assign({\n        // TODO FW-4784\n        'item-checkbox-checked': option.checked\n      }, getClassMap(option.cssClass))\n    }, h(\"ion-checkbox\", {\n      value: option.value,\n      disabled: option.disabled,\n      checked: option.checked,\n      justify: \"start\",\n      labelPlacement: \"end\",\n      onIonChange: ev => {\n        this.setChecked(ev);\n        this.callOptionHandler(ev);\n        // TODO FW-4784\n        forceUpdate(this);\n      }\n    }, option.text)));\n  }\n  render() {\n    return h(Host, {\n      key: 'b6c0dec240b2e41985b15fdf4e5a6d3a145c1567',\n      class: getIonMode(this)\n    }, h(\"ion-header\", {\n      key: 'cd177e85ee0f62a60a3a708342d6ab6eb19a44dc'\n    }, h(\"ion-toolbar\", {\n      key: 'aee8222a5a4daa540ad202b2e4cac1ef93d9558c'\n    }, this.header !== undefined && h(\"ion-title\", {\n      key: '5f8fecc764d97bf840d3d4cfddeeccd118ab4436'\n    }, this.header), h(\"ion-buttons\", {\n      key: '919033950d7c2b0101f96a9c9698219de9f568ea',\n      slot: \"end\"\n    }, h(\"ion-button\", {\n      key: '34b571cab6dced4bde555a077a21e91800829931',\n      onClick: () => this.closeModal()\n    }, \"Close\")))), h(\"ion-content\", {\n      key: '3c9153d26ba7a5a03d3b20fcd628d0c3031661a7'\n    }, h(\"ion-list\", {\n      key: 'e00b222c071bc97c82ad1bba4db95a8a5c43ed6d'\n    }, this.multiple === true ? this.renderCheckboxOptions() : this.renderRadioOptions())));\n  }\n  get el() {\n    return this;\n  }\n  static get style() {\n    return {\n      ionic: ionicSelectModalMdCss,\n      ios: selectModalIosCss,\n      md: selectModalMdCss\n    };\n  }\n}, [290, \"ion-select-modal\", {\n  \"header\": [1],\n  \"multiple\": [4],\n  \"options\": [16]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-select-modal\", \"ion-button\", \"ion-buttons\", \"ion-checkbox\", \"ion-content\", \"ion-header\", \"ion-icon\", \"ion-item\", \"ion-list\", \"ion-radio\", \"ion-radio-group\", \"ion-ripple-effect\", \"ion-title\", \"ion-toolbar\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-select-modal\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, SelectModal);\n        }\n        break;\n      case \"ion-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$d();\n        }\n        break;\n      case \"ion-buttons\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$c();\n        }\n        break;\n      case \"ion-checkbox\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$b();\n        }\n        break;\n      case \"ion-content\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$a();\n        }\n        break;\n      case \"ion-header\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$9();\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$8();\n        }\n        break;\n      case \"ion-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n        break;\n      case \"ion-list\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n        break;\n      case \"ion-radio\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ion-radio-group\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ion-title\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n      case \"ion-toolbar\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$1();\n        }\n        break;\n    }\n  });\n}\nexport { SelectModal as S, defineCustomElement as d };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}