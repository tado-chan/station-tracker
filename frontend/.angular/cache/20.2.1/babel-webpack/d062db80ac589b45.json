{"ast":null,"code":"import _asyncToGenerator from \"/mnt/c/Users/aluta/station-tracker/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { readTask, writeTask, proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { f as findIonContent, p as printIonContentErrorMsg, g as getScrollElement } from './index8.js';\nimport { c as createKeyboardController } from './keyboard-controller.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { f as clamp } from './helpers.js';\nconst handleFooterFade = (scrollEl, baseEl) => {\n  readTask(() => {\n    const scrollTop = scrollEl.scrollTop;\n    const maxScroll = scrollEl.scrollHeight - scrollEl.clientHeight;\n    /**\n     * Toolbar background will fade\n     * out over fadeDuration in pixels.\n     */\n    const fadeDuration = 10;\n    /**\n     * Begin fading out maxScroll - 30px\n     * from the bottom of the content.\n     * Also determine how close we are\n     * to starting the fade. If we are\n     * before the starting point, the\n     * scale value will get clamped to 0.\n     * If we are after the maxScroll (rubber\n     * band scrolling), the scale value will\n     * get clamped to 1.\n     */\n    const fadeStart = maxScroll - fadeDuration;\n    const distanceToStart = scrollTop - fadeStart;\n    const scale = clamp(0, 1 - distanceToStart / fadeDuration, 1);\n    writeTask(() => {\n      baseEl.style.setProperty('--opacity-scale', scale.toString());\n    });\n  });\n};\nconst footerIosCss = \"ion-footer{display:block;position:relative;-ms-flex-order:1;order:1;width:100%;z-index:10}ion-footer.footer-toolbar-padding ion-toolbar:last-of-type{padding-bottom:var(--ion-safe-area-bottom, 0)}.footer-ios ion-toolbar:first-of-type{--border-width:0.55px 0 0}@supports ((-webkit-backdrop-filter: blur(0)) or (backdrop-filter: blur(0))){.footer-background{left:0;right:0;top:0;bottom:0;position:absolute;-webkit-backdrop-filter:saturate(180%) blur(20px);backdrop-filter:saturate(180%) blur(20px)}.footer-translucent-ios ion-toolbar{--opacity:.8}}.footer-ios.ion-no-border ion-toolbar:first-of-type{--border-width:0}.footer-collapse-fade ion-toolbar{--opacity-scale:inherit}\";\nconst footerMdCss = \"ion-footer{display:block;position:relative;-ms-flex-order:1;order:1;width:100%;z-index:10}ion-footer.footer-toolbar-padding ion-toolbar:last-of-type{padding-bottom:var(--ion-safe-area-bottom, 0)}.footer-md{-webkit-box-shadow:0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);box-shadow:0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12)}.footer-md.ion-no-border{-webkit-box-shadow:none;box-shadow:none}\";\nconst Footer = /*@__PURE__*/proxyCustomElement(class Footer extends HTMLElement {\n  constructor() {\n    var _this;\n    super();\n    _this = this;\n    this.__registerHost();\n    this.keyboardCtrl = null;\n    this.keyboardVisible = false;\n    /**\n     * If `true`, the footer will be translucent.\n     * Only applies when the mode is `\"ios\"` and the device supports\n     * [`backdrop-filter`](https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter#Browser_compatibility).\n     *\n     * Note: In order to scroll content behind the footer, the `fullscreen`\n     * attribute needs to be set on the content.\n     */\n    this.translucent = false;\n    this.checkCollapsibleFooter = () => {\n      const mode = getIonMode(this);\n      if (mode !== 'ios') {\n        return;\n      }\n      const {\n        collapse\n      } = this;\n      const hasFade = collapse === 'fade';\n      this.destroyCollapsibleFooter();\n      if (hasFade) {\n        const pageEl = this.el.closest('ion-app,ion-page,.ion-page,page-inner');\n        const contentEl = pageEl ? findIonContent(pageEl) : null;\n        if (!contentEl) {\n          printIonContentErrorMsg(this.el);\n          return;\n        }\n        this.setupFadeFooter(contentEl);\n      }\n    };\n    this.setupFadeFooter = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (contentEl) {\n        const scrollEl = _this.scrollEl = yield getScrollElement(contentEl);\n        /**\n         * Handle fading of toolbars on scroll\n         */\n        _this.contentScrollCallback = () => {\n          handleFooterFade(scrollEl, _this.el);\n        };\n        scrollEl.addEventListener('scroll', _this.contentScrollCallback);\n        handleFooterFade(scrollEl, _this.el);\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n  }\n  componentDidLoad() {\n    this.checkCollapsibleFooter();\n  }\n  componentDidUpdate() {\n    this.checkCollapsibleFooter();\n  }\n  connectedCallback() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.keyboardCtrl = yield createKeyboardController(/*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (keyboardOpen, waitForResize) {\n          /**\n           * If the keyboard is hiding, then we need to wait\n           * for the webview to resize. Otherwise, the footer\n           * will flicker before the webview resizes.\n           */\n          if (keyboardOpen === false && waitForResize !== undefined) {\n            yield waitForResize;\n          }\n          _this2.keyboardVisible = keyboardOpen; // trigger re-render by updating state\n        });\n        return function (_x2, _x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n  disconnectedCallback() {\n    if (this.keyboardCtrl) {\n      this.keyboardCtrl.destroy();\n    }\n  }\n  destroyCollapsibleFooter() {\n    if (this.scrollEl && this.contentScrollCallback) {\n      this.scrollEl.removeEventListener('scroll', this.contentScrollCallback);\n      this.contentScrollCallback = undefined;\n    }\n  }\n  render() {\n    const {\n      translucent,\n      collapse\n    } = this;\n    const mode = getIonMode(this);\n    const tabs = this.el.closest('ion-tabs');\n    const tabBar = tabs === null || tabs === void 0 ? void 0 : tabs.querySelector(':scope > ion-tab-bar');\n    return h(Host, {\n      key: 'ddc228f1a1e7fa4f707dccf74db2490ca3241137',\n      role: \"contentinfo\",\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`footer-${mode}`]: true,\n        [`footer-translucent`]: translucent,\n        [`footer-translucent-${mode}`]: translucent,\n        ['footer-toolbar-padding']: !this.keyboardVisible && (!tabBar || tabBar.slot !== 'bottom'),\n        [`footer-collapse-${collapse}`]: collapse !== undefined\n      }\n    }, mode === 'ios' && translucent && h(\"div\", {\n      key: 'e16ed4963ff94e06de77eb8038201820af73937c',\n      class: \"footer-background\"\n    }), h(\"slot\", {\n      key: 'f186934febf85d37133d9351a96c1a64b0a4b203'\n    }));\n  }\n  get el() {\n    return this;\n  }\n  static get style() {\n    return {\n      ios: footerIosCss,\n      md: footerMdCss\n    };\n  }\n}, [292, \"ion-footer\", {\n  \"collapse\": [1],\n  \"translucent\": [4],\n  \"keyboardVisible\": [32]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-footer\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-footer\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Footer);\n        }\n        break;\n    }\n  });\n}\nconst IonFooter = Footer;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonFooter, defineCustomElement };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}