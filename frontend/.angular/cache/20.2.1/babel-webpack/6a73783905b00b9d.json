{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { r as reorderThreeOutline, s as reorderTwoSharp } from './index6.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { d as defineCustomElement$2 } from './icon.js';\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:2.125rem;opacity:0.4}\";\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:1.9375rem;opacity:0.3}\";\nconst Reorder = /*@__PURE__*/proxyCustomElement(class Reorder extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n  }\n  onClick(ev) {\n    const reorderGroup = this.el.closest('ion-reorder-group');\n    ev.preventDefault();\n    // Only stop event propagation if the reorder is inside of an enabled\n    // reorder group. This allows interaction with clickable children components.\n    if (!reorderGroup || !reorderGroup.disabled) {\n      ev.stopImmediatePropagation();\n    }\n  }\n  render() {\n    const mode = getIonMode(this);\n    const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\n    return h(Host, {\n      key: 'e6807bb349725682e99e791ac65e729a360d64e8',\n      class: mode\n    }, h(\"slot\", {\n      key: '1c691cdbffa6427ba08dc12184c69559ed5d5506'\n    }, h(\"ion-icon\", {\n      key: '8b4150302cdca475379582b2251737b5e74079b1',\n      icon: reorderIcon,\n      lazy: false,\n      class: \"reorder-icon\",\n      part: \"icon\",\n      \"aria-hidden\": \"true\"\n    })));\n  }\n  get el() {\n    return this;\n  }\n  static get style() {\n    return {\n      ios: reorderIosCss,\n      md: reorderMdCss\n    };\n  }\n}, [289, \"ion-reorder\", undefined, [[2, \"click\", \"onClick\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-reorder\", \"ion-icon\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-reorder\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Reorder);\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonReorder = Reorder;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonReorder, defineCustomElement };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}